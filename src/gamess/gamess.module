#!/bin/bash
/bin/mkdir -m 0755 -p ROOT_PKGROOTMODULEROOT

cat > ROOT_PKGROOTMODULEROOT/VERSION <<END
#%Module1.0
set compiler "nocompiler"
set network "nonetwork"
set mpi ""
if {[module-info mode switch1] || [module-info mode switch3]} {
  set commandWords [split [exec /bin/ps -p [pid] -o args=] " "]
  set switchFrom [lindex [split [module-info name] "/"] 0]
  set switchTo [lindex [split [lindex \$commandWords end] "/"] 0]
  set loadApps [expr  [string equal \$switchTo \$switchFrom]]
} elseif {[module-info mode remove]} {
  set loadApps 0
} elseif {[module-info mode display]} {
  set loadApps 0
} else {
   set loadApps 1
}
if { \$loadApps  }  {
 if {[info exists env(LOADEDMODULES)]} {
  foreach app [split \$env(LOADEDMODULES) ":"] {
     if { [ string match "*intel*" \$app ] == 1 } {
          set compiler "intel"
     } elseif { [ string match "*pgi*" \$app ] == 1 } {
          set compiler "pgi"
     } elseif { [ string match "*gnu*" \$app ] == 1 && [ string match *gnubase* \$app ] == 0 } {
          set compiler "gnu"
     }
     if { [ string match "*mvapich2*" \$app ] == 1 } {
          set mpi "mvapich2"
     } elseif { [ string match "*openmpi*" \$app ] == 1 } {
          set mpi "openmpi"
     } elseif { [ string match "*mpich2*" \$app ] == 1 } {
          set mpi "mpich2"
     }
     if { [ string match "*_ib*" \$app ] == 1 } {
          set network "ib"
     } elseif { [ string match "*_mx*" \$app ] == 1 } {
          set network "mx"
     } elseif { [ string match "*_eth*" \$app ] == 1 } {
          set network "eth"
     }
  }
 }

 if { [ string equal "nocompiler" \$compiler ] ==  1 } {
      module load ROLLCOMPILER
      module load ROLLMPI_ROLLNETWORK
      puts stderr "loading ROLLCOMPILER and ROLLMPI_ROLLNETWORK modules"
  } elseif { [ string equal "ROLLCOMPILER" \$compiler ] ==  1 } {
      if { [ string equal "nonetwork" \$network ] == 0 } {
          if { [ string equal \${mpi}_\${network} "ROLLMPI_ROLLNETWORK" ] == 0 } {
              module unload \${mpi}_\${network}
              module load ROLLMPI_ROLLNETWORK
              puts stderr "loading the ROLLMPI_ROLLNETWORK module"
          }
      }
  } else {
      module unload \$compiler
      module load ROLLCOMPILER
      module load ROLLMPI_ROLLNETWORK
      puts stderr "loading ROLLCOMPILER and ROLLMPI_ROLLNETWORK modules"
  }
}
setenv GAMESSHOME /opt/gamess
prepend-path PATH /opt/gamess
END

chmod 0644  ROOT_PKGROOTMODULEROOT/VERSION

cat > ROOT_PKGROOTMODULEROOT/.version.VERSION <<END
#%Module1.0
set ModulesVersion "VERSION"
END

(cd ROOT_PKGROOTMODULEROOT; if test ! -e .version; then /bin/ln -s .version.VERSION .version; fi )

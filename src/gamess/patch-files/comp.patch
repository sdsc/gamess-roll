--- comp	2018-05-03 15:26:25.533120075 -0700
+++ patch-files/comp	2018-05-03 15:28:56.083124700 -0700
@@ -1593,6 +1593,7 @@
          case 5.1:
          case 5.2:
          case 5.3:
+         case 7.[0-9]:
             if ($MODULE == cosmo)  set OPT='-O0'
             if ($MODULE == dcscf)  set OPT='-O0'
             if ($MODULE == tddgrd) set OPT='-O0'
@@ -1766,7 +1767,7 @@
 #
 #         first, initialize OPT and EXTRAOPT
 #
-      set OPT='-O2'
+      set OPT='-O0'
       if ($MODULE == zheev)  set OPT='-O0'  # defensive compiling
 
       set EXTRAOPT=" "
@@ -1823,11 +1824,13 @@
          case 5.1:
          case 5.2:
          case 5.3:
+         case 7.[0-9]:
             if ($MODULE == cosmo)  set OPT='-O0'  # same issue as seen in 4.6
             if ($MODULE == dcscf)  set OPT='-O0'  # exam44, continues from 4.7
             if ($MODULE == tddgrd) set OPT='-O0'  # exam41, continues from 4.6
             set EXTRAOPT="$EXTRAOPT -w -fno-aggressive-loop-optimizations"
             breaksw
+ 
          default:
             echo Unrecognized gfortran version for linux64
             exit 4
@@ -1864,7 +1867,7 @@
 #     -WB means warn but don't fail on out-of-bounds array references
 #     -ftz flushes underflow results to zero
 #
-      set OPT = '-O2'
+      set OPT = '-O2 -xHost'
       if (".$GMS_DEBUG_FLAGS" != .) set OPT="$GMS_DEBUG_FLAGS"
 #       alas, I'm so tired of hearing about so many versions failing to
 #       diagonalize, that this time critical code is run w/o optimization.
@@ -2074,6 +2077,7 @@
          case 5.1:
          case 5.2:
          case 5.3:
+         case 7.[0-9]:
             if ($MODULE == cosmo)  set OPT='-O0'
             if ($MODULE == dcscf)  set OPT='-O0'
             if ($MODULE == tddgrd) set OPT='-O0'
@@ -2191,6 +2195,7 @@
          case 5.1:
          case 5.2:
          case 5.3:
+         case 7.[0-9]:
             if ($MODULE == cosmo)  set OPT='-O0'
             if ($MODULE == dcscf)  set OPT='-O0'
             if ($MODULE == tddgrd) set OPT='-O0'
